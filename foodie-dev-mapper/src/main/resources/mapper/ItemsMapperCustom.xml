<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imooc.mapper.ItemsMapperCustom">
    <select id="queryItemComments" parameterType="Map" resultType="com.imooc.pojo.vo.ItemCommentVo">
        SELECT
        ic.comment_level as contentLevel,
        ic.content as content,
        ic.sepc_name as sepcName,
        ic.created_time as createdTime,
        u.face as userFace,
        u.nickname as nickname
        FROM
        items_comments ic
        LEFT JOIN users u ON ic.user_id = u.id
        WHERE
        ic.item_id = #{paramsMap.itemId}
        <if test="paramsMap.level != null and paramsMap.level != ''">
            AND ic.comment_level = #{paramsMap.level}
        </if>
    </select>

    <select id="searchItems" parameterType="Map" resultType="com.imooc.pojo.vo.SearchItemsVo">
        SELECT
        i.id AS itemId,
        i.item_name AS itemName,
        i.sell_counts AS sellCounts,
        ii.url AS imgUrl,
        tempSpec.price_discount as price
        FROM
        items i
        LEFT JOIN items_img ii ON i.id = ii.item_id
        left JOIN
        (SELECT item_id, min( price_discount ) AS price_discount FROM items_spec GROUP BY item_id ) AS tempSpec
        on i.id = tempSpec.item_id
        WHERE
        ii.is_main = 1
        <if test="paramsMap.keywords != null and paramsMap.keywords != ''">
            -- 注意$符号的使用
            AND i.item_name like '%${paramsMap.keywords}%'
        </if>
        ORDER BY
        -- k:默认，代表默认排序
        -- c:代表销量排序
        -- p:代表价格排序
        -- &quot;c&quot; 单引号转意
        <choose>
            <when test="paramsMap.sort == &quot;c&quot;">
                i.sell_counts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot;">
                tempSpec.price_discount desc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>
    <select id="searchItemsByThirdCat" parameterType="Map" resultType="com.imooc.pojo.vo.SearchItemsVo">
        SELECT
        i.id AS itemId,
        i.item_name AS itemName,
        i.sell_counts AS sellCounts,
        ii.url AS imgUrl,
        tempSpec.price_discount as price
        FROM
        items i
        LEFT JOIN items_img ii ON i.id = ii.item_id
        left JOIN
        (SELECT item_id, min( price_discount ) AS price_discount FROM items_spec GROUP BY item_id ) AS tempSpec
        on i.id = tempSpec.item_id
        WHERE
        ii.is_main = 1
        and i.cat_id = #{paramsMap.catId}
        ORDER BY
        -- k:默认，代表默认排序
        -- c:代表销量排序
        -- p:代表价格排序
        -- &quot;c&quot; 单引号转意
        <choose>
            <when test="paramsMap.sort == &quot;c&quot;">
                i.sell_counts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot;">
                tempSpec.price_discount desc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>
    <select id="queryItemsBySpecIds" parameterType="List" resultType="com.imooc.pojo.vo.ShopcartVo">
        SELECT
            t_items.id as  itemId,
            t_items.item_name as itemName,
            t_item_img.url as itemImgUrl,
            t_items_spec.id as specId,
            t_items_spec.name as specName,
            t_items_spec.price_discount as priceDiscount,
            t_items_spec.price_normal as priceNormal
        FROM
            items_spec AS t_items_spec
            LEFT JOIN items t_items ON t_items.id = t_items_spec.item_id
            LEFT JOIN items_img AS t_item_img ON t_item_img.item_id = t_items.id
        WHERE
            t_item_img.is_main = 1
            AND t_items_spec.id
            IN
            <foreach collection="paramsList" index="index" item="specId" open="(" close=")" separator=",">
                #{specId}
            </foreach>
    </select>
    <update id="decreaseItemSpecStock">
        update
            items_spec
        set
             stock = stock - #{pendingCounts}
        where
            id = #{specId}
        and
            stock>=#{pendingCounts}

    </update>
</mapper>